// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id        Int      @id @default(autoincrement())
  clerkUserId  String  @unique
  name      String
  email     String   @unique
  starSign  StarSign @relation(fields: [starSignId], references: [id])
  starSignId Int
  compatibilityCalculationsA    CompatibilityCalculation[] @relation("UserACompatibilityCalculations")
  compatibilityCalculationsB    CompatibilityCalculation[] @relation("UserBCompatibilityCalculations")

  matches   User[]   @relation(name: "UserMatches")
  matchedBy User[]   @relation(name: "UserMatches")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}


model CompatibilityCalculation {
  id                       Int      @id @default(autoincrement())
  userAId                  Int
  userBId                  Int
  userA                    User     @relation("UserACompatibilityCalculations", fields: [userAId], references: [id])
  userB                    User     @relation("UserBCompatibilityCalculations", fields: [userBId], references: [id])
  birthDateA               DateTime
  birthTimeA               DateTime
  birthDateB               DateTime
  birthTimeB               DateTime
  score                    Float
  analysis1                String
  analysis2                String
  compatibilityAnalysis    String
  createdAt                DateTime @default(now())
  updatedAt                DateTime @updatedAt

  @@index([userAId], name: "idx_userAId")
  @@index([userBId], name: "idx_userBId")
}

model StarSign {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  users User[]
}
